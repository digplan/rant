import { strict as assert } from 'node:assert'
import { executionAsyncResource } from 'node:async_hooks'
import { isJSON, tde, get, save, read, load, exists, del, hash, te, tm, log, wait, appendLn, saveES } from './module.mjs'
//global.debug = true

console.log('fs tests')
te(1, 1)
te(isJSON('no'), undefined)
te(JSON.stringify(isJSON('{"a":1}')), '{"a":1}')
te(await get('httpbin.org/post', { method: 'POST', body: '{"a": 1}' }, x => x.a = 2), 2)
te(save({ a: 1 }, './myfile.json'), './myfile.json')
te(read('./myfile.json'), '{\n  "a": 1\n}')
assert.deepStrictEqual(load('./myfile.json'), { a: 1 })
te(exists('./myfile.json'), true)
te(del('./myfile.json'), './myfile.json')
te(hash('cb'), '103d6254a6d94bacc82e822885185f56c69cb799ec5124c0aa405e386975151b')
tm('abc', /abc/)
te(await wait(500), 'wait over')

const fnte = './testappend.txt'
if(exists(fnte)) del(fnte)
appendLn('hey line 1', fnte)
appendLn('hey line 2', fnte)
te(read(fnte), '\r\nhey line 1\r\nhey line 2')
del(fnte)
saveES({a: 1}, './testmodule.mjs')
const cfg = await import('./testmodule.mjs')
te(cfg.default.a, 1)
del('./testmodule.mjs')

te(log('done'), undefined)